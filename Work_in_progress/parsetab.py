
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIGNACION CONSTANTE DIVISION IDENTIFICADOR LLAVE_DERECHA LLAVE_IZQUIERDA MAYORQUE MENORQUE MENOR_MENOR MULTIPLICACION NUMERO OPERADOR_ASIGNACION OPERADOR_SUMA PALABRA_RESERVADA PARENTESIS_DERECHO PARENTESIS_IZQUIERDO PUNTO_COMA RESTA STRING SUMAprogram : statementsstatements : statement statementsstatements : statement : declaration\n                 | assignment\n                 | printexpression : expression SUMA expressionexpression : expression RESTA expressiondeclaration : PALABRA_RESERVADA IDENTIFICADOR PUNTO_COMAassignment : IDENTIFICADOR ASIGNACION expression PUNTO_COMAexpression : IDENTIFICADORprint : PALABRA_RESERVADA MENOR_MENOR expression PUNTO_COMAexpression : NUMEROexpression : STRINGexpression : PARENTESIS_IZQUIERDO expression PARENTESIS_DERECHOexpression : expression MAYORQUE expressionexpression : expression MENORQUE expression'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,9,13,20,26,],[-3,0,-1,-3,-4,-5,-6,-2,-9,-12,-10,]),'PALABRA_RESERVADA':([0,3,4,5,6,13,20,26,],[7,7,-4,-5,-6,-9,-12,-10,]),'IDENTIFICADOR':([0,3,4,5,6,7,11,12,13,18,20,21,22,23,24,26,],[8,8,-4,-5,-6,10,15,15,-9,15,-12,15,15,15,15,-10,]),'MENOR_MENOR':([7,],[11,]),'ASIGNACION':([8,],[12,]),'PUNTO_COMA':([10,14,15,16,17,19,27,28,29,30,31,],[13,20,-11,-13,-14,26,-7,-8,-16,-17,-15,]),'NUMERO':([11,12,18,21,22,23,24,],[16,16,16,16,16,16,16,]),'STRING':([11,12,18,21,22,23,24,],[17,17,17,17,17,17,17,]),'PARENTESIS_IZQUIERDO':([11,12,18,21,22,23,24,],[18,18,18,18,18,18,18,]),'SUMA':([14,15,16,17,19,25,27,28,29,30,31,],[21,-11,-13,-14,21,21,21,21,21,21,-15,]),'RESTA':([14,15,16,17,19,25,27,28,29,30,31,],[22,-11,-13,-14,22,22,22,22,22,22,-15,]),'MAYORQUE':([14,15,16,17,19,25,27,28,29,30,31,],[23,-11,-13,-14,23,23,23,23,23,23,-15,]),'MENORQUE':([14,15,16,17,19,25,27,28,29,30,31,],[24,-11,-13,-14,24,24,24,24,24,24,-15,]),'PARENTESIS_DERECHO':([15,16,17,25,27,28,29,30,31,],[-11,-13,-14,31,-7,-8,-16,-17,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,3,],[2,9,]),'statement':([0,3,],[3,3,]),'declaration':([0,3,],[4,4,]),'assignment':([0,3,],[5,5,]),'print':([0,3,],[6,6,]),'expression':([11,12,18,21,22,23,24,],[14,19,25,27,28,29,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',5),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',9),
  ('statements -> <empty>','statements',0,'p_statements_empty','parser.py',13),
  ('statement -> declaration','statement',1,'p_statement','parser.py',17),
  ('statement -> assignment','statement',1,'p_statement','parser.py',18),
  ('statement -> print','statement',1,'p_statement','parser.py',19),
  ('expression -> expression SUMA expression','expression',3,'p_expression_plus','parser.py',23),
  ('expression -> expression RESTA expression','expression',3,'p_expression_minus','parser.py',27),
  ('declaration -> PALABRA_RESERVADA IDENTIFICADOR PUNTO_COMA','declaration',3,'p_declaration','parser.py',31),
  ('assignment -> IDENTIFICADOR ASIGNACION expression PUNTO_COMA','assignment',4,'p_assignment','parser.py',35),
  ('expression -> IDENTIFICADOR','expression',1,'p_expression','parser.py',39),
  ('print -> PALABRA_RESERVADA MENOR_MENOR expression PUNTO_COMA','print',4,'p_print','parser.py',43),
  ('expression -> NUMERO','expression',1,'p_expression_number','parser.py',47),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',51),
  ('expression -> PARENTESIS_IZQUIERDO expression PARENTESIS_DERECHO','expression',3,'p_expression_parenthesis','parser.py',55),
  ('expression -> expression MAYORQUE expression','expression',3,'p_expression_mayorque','parser.py',59),
  ('expression -> expression MENORQUE expression','expression',3,'p_expression_menorque','parser.py',63),
]
